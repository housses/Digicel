// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package sev_proj.imp_invoices_0_2;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: imp_invoices Purpose: Importe invoices from last year<br>
 * Description: <br>
 * 
 * @author user@talend.com
 * @version 8.0.1.20211109_1610
 * @status
 */
public class imp_invoices implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

		// if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if (NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.2";
	private final String jobName = "imp_invoices";
	private final String projectName = "SEV_PROJ";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	public void setDataSourceReferences(List serviceReferences) throws Exception {

		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();

		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils
				.getServices(serviceReferences, javax.sql.DataSource.class).entrySet()) {
			dataSources.put(entry.getKey(), entry.getValue());
			talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					imp_invoices.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(imp_invoices.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tSetProxy_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tSetProxy_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSalesforceInput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		tSalesforceOutputBulkExec_1_tSalesforceBulkExec_error(exception, errorComponent, globalMap);

	}

	public void tSalesforceOutputBulkExec_1_tSalesforceBulkExec_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSetProxy_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tDBInput_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tSetProxy_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tSetProxy_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tSetProxy_1 begin ] start
				 */

				ok_Hash.put("tSetProxy_1", false);
				start_Hash.put("tSetProxy_1", System.currentTimeMillis());

				currentComponent = "tSetProxy_1";

				int tos_count_tSetProxy_1 = 0;

				/**
				 * [tSetProxy_1 begin ] stop
				 */

				/**
				 * [tSetProxy_1 main ] start
				 */

				currentComponent = "tSetProxy_1";

				java.util.Properties props_tSetProxy_1 = System.getProperties();
				System.setProperty("http.proxySet", "true");

				System.setProperty("http.proxyHost", "172.24.4.200");
				System.setProperty("http.proxyPort", "8080");
				System.setProperty("http.nonProxyHosts", "192.168.0.* | localhost");

				System.setProperty("http.proxyUser", "");

				final String decryptedPassword_tSetProxy_1 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:9yFD4fBf1R04Avgh8LJfldUvmBgZLFEnSBD2iA==");

				System.setProperty("http.proxyPassword", decryptedPassword_tSetProxy_1);

				java.net.Authenticator.setDefault(new java.net.Authenticator() {
					public java.net.PasswordAuthentication getPasswordAuthentication() {
						return new java.net.PasswordAuthentication("", decryptedPassword_tSetProxy_1.toCharArray());
					}
				});

				tos_count_tSetProxy_1++;

				/**
				 * [tSetProxy_1 main ] stop
				 */

				/**
				 * [tSetProxy_1 process_data_begin ] start
				 */

				currentComponent = "tSetProxy_1";

				/**
				 * [tSetProxy_1 process_data_begin ] stop
				 */

				/**
				 * [tSetProxy_1 process_data_end ] start
				 */

				currentComponent = "tSetProxy_1";

				/**
				 * [tSetProxy_1 process_data_end ] stop
				 */

				/**
				 * [tSetProxy_1 end ] start
				 */

				currentComponent = "tSetProxy_1";

				ok_Hash.put("tSetProxy_1", true);
				end_Hash.put("tSetProxy_1", System.currentTimeMillis());

				/**
				 * [tSetProxy_1 end ] stop
				 */
			} // end the resume

			if (resumeEntryMethodName == null || globalResumeTicket) {
				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSetProxy_1:OnSubjobOk", "",
						Thread.currentThread().getId() + "", "", "", "", "", "");
			}

			if (execStat) {
				runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
			}

			tDBInput_1Process(globalMap);

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tSetProxy_1 finally ] start
				 */

				currentComponent = "tSetProxy_1";

				/**
				 * [tSetProxy_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tSetProxy_1_SUBPROCESS_STATE", 1);
	}

	public static class out_invoices_sfStruct implements routines.system.IPersistableRow<out_invoices_sfStruct> {
		final static byte[] commonByteArrayLock_SEV_PROJ_imp_invoices = new byte[0];
		static byte[] commonByteArray_SEV_PROJ_imp_invoices = new byte[0];

		public String AccountName__c;

		public String getAccountName__c() {
			return this.AccountName__c;
		}

		public java.util.Date InvoiceDate__c;

		public java.util.Date getInvoiceDate__c() {
			return this.InvoiceDate__c;
		}

		public String InvoiceID__c;

		public String getInvoiceID__c() {
			return this.InvoiceID__c;
		}

		public java.util.Date PaymentDueDate__c;

		public java.util.Date getPaymentDueDate__c() {
			return this.PaymentDueDate__c;
		}

		public BigDecimal Amount__c;

		public BigDecimal getAmount__c() {
			return this.Amount__c;
		}

		public BigDecimal CurrentDue__c;

		public BigDecimal getCurrentDue__c() {
			return this.CurrentDue__c;
		}

		public java.util.Date DueDate__c;

		public java.util.Date getDueDate__c() {
			return this.DueDate__c;
		}

		public BigDecimal TVA__c;

		public BigDecimal getTVA__c() {
			return this.TVA__c;
		}

		public BigDecimal AmountTTC__c;

		public BigDecimal getAmountTTC__c() {
			return this.AmountTTC__c;
		}

		public String ClientNumber__c;

		public String getClientNumber__c() {
			return this.ClientNumber__c;
		}

		public String Source__c;

		public String getSource__c() {
			return this.Source__c;
		}

		public String Invoice_Number__c;

		public String getInvoice_Number__c() {
			return this.Invoice_Number__c;
		}

		public String PaymentOptions__c;

		public String getPaymentOptions__c() {
			return this.PaymentOptions__c;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.AccountName__c = readString(dis);

					this.InvoiceDate__c = readDate(dis);

					this.InvoiceID__c = readString(dis);

					this.PaymentDueDate__c = readDate(dis);

					this.Amount__c = (BigDecimal) dis.readObject();

					this.CurrentDue__c = (BigDecimal) dis.readObject();

					this.DueDate__c = readDate(dis);

					this.TVA__c = (BigDecimal) dis.readObject();

					this.AmountTTC__c = (BigDecimal) dis.readObject();

					this.ClientNumber__c = readString(dis);

					this.Source__c = readString(dis);

					this.Invoice_Number__c = readString(dis);

					this.PaymentOptions__c = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.AccountName__c = readString(dis);

					this.InvoiceDate__c = readDate(dis);

					this.InvoiceID__c = readString(dis);

					this.PaymentDueDate__c = readDate(dis);

					this.Amount__c = (BigDecimal) dis.readObject();

					this.CurrentDue__c = (BigDecimal) dis.readObject();

					this.DueDate__c = readDate(dis);

					this.TVA__c = (BigDecimal) dis.readObject();

					this.AmountTTC__c = (BigDecimal) dis.readObject();

					this.ClientNumber__c = readString(dis);

					this.Source__c = readString(dis);

					this.Invoice_Number__c = readString(dis);

					this.PaymentOptions__c = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.AccountName__c, dos);

				// java.util.Date

				writeDate(this.InvoiceDate__c, dos);

				// String

				writeString(this.InvoiceID__c, dos);

				// java.util.Date

				writeDate(this.PaymentDueDate__c, dos);

				// BigDecimal

				dos.writeObject(this.Amount__c);

				// BigDecimal

				dos.writeObject(this.CurrentDue__c);

				// java.util.Date

				writeDate(this.DueDate__c, dos);

				// BigDecimal

				dos.writeObject(this.TVA__c);

				// BigDecimal

				dos.writeObject(this.AmountTTC__c);

				// String

				writeString(this.ClientNumber__c, dos);

				// String

				writeString(this.Source__c, dos);

				// String

				writeString(this.Invoice_Number__c, dos);

				// String

				writeString(this.PaymentOptions__c, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.AccountName__c, dos);

				// java.util.Date

				writeDate(this.InvoiceDate__c, dos);

				// String

				writeString(this.InvoiceID__c, dos);

				// java.util.Date

				writeDate(this.PaymentDueDate__c, dos);

				// BigDecimal

				dos.writeObject(this.Amount__c);

				// BigDecimal

				dos.writeObject(this.CurrentDue__c);

				// java.util.Date

				writeDate(this.DueDate__c, dos);

				// BigDecimal

				dos.writeObject(this.TVA__c);

				// BigDecimal

				dos.writeObject(this.AmountTTC__c);

				// String

				writeString(this.ClientNumber__c, dos);

				// String

				writeString(this.Source__c, dos);

				// String

				writeString(this.Invoice_Number__c, dos);

				// String

				writeString(this.PaymentOptions__c, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("AccountName__c=" + AccountName__c);
			sb.append(",InvoiceDate__c=" + String.valueOf(InvoiceDate__c));
			sb.append(",InvoiceID__c=" + InvoiceID__c);
			sb.append(",PaymentDueDate__c=" + String.valueOf(PaymentDueDate__c));
			sb.append(",Amount__c=" + String.valueOf(Amount__c));
			sb.append(",CurrentDue__c=" + String.valueOf(CurrentDue__c));
			sb.append(",DueDate__c=" + String.valueOf(DueDate__c));
			sb.append(",TVA__c=" + String.valueOf(TVA__c));
			sb.append(",AmountTTC__c=" + String.valueOf(AmountTTC__c));
			sb.append(",ClientNumber__c=" + ClientNumber__c);
			sb.append(",Source__c=" + Source__c);
			sb.append(",Invoice_Number__c=" + Invoice_Number__c);
			sb.append(",PaymentOptions__c=" + PaymentOptions__c);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(out_invoices_sfStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_SEV_PROJ_imp_invoices = new byte[0];
		static byte[] commonByteArray_SEV_PROJ_imp_invoices = new byte[0];

		public BigDecimal CUSTOMER_NODE_ID;

		public BigDecimal getCUSTOMER_NODE_ID() {
			return this.CUSTOMER_NODE_ID;
		}

		public BigDecimal ACCOUNT_ID;

		public BigDecimal getACCOUNT_ID() {
			return this.ACCOUNT_ID;
		}

		public String ACCOUNT_NAME;

		public String getACCOUNT_NAME() {
			return this.ACCOUNT_NAME;
		}

		public String GENERAL_3;

		public String getGENERAL_3() {
			return this.GENERAL_3;
		}

		public String GENERAL_2;

		public String getGENERAL_2() {
			return this.GENERAL_2;
		}

		public BigDecimal INVOICE_ID;

		public BigDecimal getINVOICE_ID() {
			return this.INVOICE_ID;
		}

		public java.util.Date EFFECTIVE_DATE;

		public java.util.Date getEFFECTIVE_DATE() {
			return this.EFFECTIVE_DATE;
		}

		public java.util.Date PAYMENT_DUE_DATE;

		public java.util.Date getPAYMENT_DUE_DATE() {
			return this.PAYMENT_DUE_DATE;
		}

		public BigDecimal INVOICE_AMOUNT;

		public BigDecimal getINVOICE_AMOUNT() {
			return this.INVOICE_AMOUNT;
		}

		public BigDecimal CURRENT_DUE;

		public BigDecimal getCURRENT_DUE() {
			return this.CURRENT_DUE;
		}

		public BigDecimal PAYMENT_METHOD_CODE;

		public BigDecimal getPAYMENT_METHOD_CODE() {
			return this.PAYMENT_METHOD_CODE;
		}

		public String GENERAL_21;

		public String getGENERAL_21() {
			return this.GENERAL_21;
		}

		public String ABBREVIATION;

		public String getABBREVIATION() {
			return this.ABBREVIATION;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.CUSTOMER_NODE_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_NAME = readString(dis);

					this.GENERAL_3 = readString(dis);

					this.GENERAL_2 = readString(dis);

					this.INVOICE_ID = (BigDecimal) dis.readObject();

					this.EFFECTIVE_DATE = readDate(dis);

					this.PAYMENT_DUE_DATE = readDate(dis);

					this.INVOICE_AMOUNT = (BigDecimal) dis.readObject();

					this.CURRENT_DUE = (BigDecimal) dis.readObject();

					this.PAYMENT_METHOD_CODE = (BigDecimal) dis.readObject();

					this.GENERAL_21 = readString(dis);

					this.ABBREVIATION = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.CUSTOMER_NODE_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_NAME = readString(dis);

					this.GENERAL_3 = readString(dis);

					this.GENERAL_2 = readString(dis);

					this.INVOICE_ID = (BigDecimal) dis.readObject();

					this.EFFECTIVE_DATE = readDate(dis);

					this.PAYMENT_DUE_DATE = readDate(dis);

					this.INVOICE_AMOUNT = (BigDecimal) dis.readObject();

					this.CURRENT_DUE = (BigDecimal) dis.readObject();

					this.PAYMENT_METHOD_CODE = (BigDecimal) dis.readObject();

					this.GENERAL_21 = readString(dis);

					this.ABBREVIATION = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// BigDecimal

				dos.writeObject(this.CUSTOMER_NODE_ID);

				// BigDecimal

				dos.writeObject(this.ACCOUNT_ID);

				// String

				writeString(this.ACCOUNT_NAME, dos);

				// String

				writeString(this.GENERAL_3, dos);

				// String

				writeString(this.GENERAL_2, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_ID);

				// java.util.Date

				writeDate(this.EFFECTIVE_DATE, dos);

				// java.util.Date

				writeDate(this.PAYMENT_DUE_DATE, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_AMOUNT);

				// BigDecimal

				dos.writeObject(this.CURRENT_DUE);

				// BigDecimal

				dos.writeObject(this.PAYMENT_METHOD_CODE);

				// String

				writeString(this.GENERAL_21, dos);

				// String

				writeString(this.ABBREVIATION, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// BigDecimal

				dos.writeObject(this.CUSTOMER_NODE_ID);

				// BigDecimal

				dos.writeObject(this.ACCOUNT_ID);

				// String

				writeString(this.ACCOUNT_NAME, dos);

				// String

				writeString(this.GENERAL_3, dos);

				// String

				writeString(this.GENERAL_2, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_ID);

				// java.util.Date

				writeDate(this.EFFECTIVE_DATE, dos);

				// java.util.Date

				writeDate(this.PAYMENT_DUE_DATE, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_AMOUNT);

				// BigDecimal

				dos.writeObject(this.CURRENT_DUE);

				// BigDecimal

				dos.writeObject(this.PAYMENT_METHOD_CODE);

				// String

				writeString(this.GENERAL_21, dos);

				// String

				writeString(this.ABBREVIATION, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("CUSTOMER_NODE_ID=" + String.valueOf(CUSTOMER_NODE_ID));
			sb.append(",ACCOUNT_ID=" + String.valueOf(ACCOUNT_ID));
			sb.append(",ACCOUNT_NAME=" + ACCOUNT_NAME);
			sb.append(",GENERAL_3=" + GENERAL_3);
			sb.append(",GENERAL_2=" + GENERAL_2);
			sb.append(",INVOICE_ID=" + String.valueOf(INVOICE_ID));
			sb.append(",EFFECTIVE_DATE=" + String.valueOf(EFFECTIVE_DATE));
			sb.append(",PAYMENT_DUE_DATE=" + String.valueOf(PAYMENT_DUE_DATE));
			sb.append(",INVOICE_AMOUNT=" + String.valueOf(INVOICE_AMOUNT));
			sb.append(",CURRENT_DUE=" + String.valueOf(CURRENT_DUE));
			sb.append(",PAYMENT_METHOD_CODE=" + String.valueOf(PAYMENT_METHOD_CODE));
			sb.append(",GENERAL_21=" + GENERAL_21);
			sb.append(",ABBREVIATION=" + ABBREVIATION);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tDBInput_1Struct implements routines.system.IPersistableRow<after_tDBInput_1Struct> {
		final static byte[] commonByteArrayLock_SEV_PROJ_imp_invoices = new byte[0];
		static byte[] commonByteArray_SEV_PROJ_imp_invoices = new byte[0];

		public BigDecimal CUSTOMER_NODE_ID;

		public BigDecimal getCUSTOMER_NODE_ID() {
			return this.CUSTOMER_NODE_ID;
		}

		public BigDecimal ACCOUNT_ID;

		public BigDecimal getACCOUNT_ID() {
			return this.ACCOUNT_ID;
		}

		public String ACCOUNT_NAME;

		public String getACCOUNT_NAME() {
			return this.ACCOUNT_NAME;
		}

		public String GENERAL_3;

		public String getGENERAL_3() {
			return this.GENERAL_3;
		}

		public String GENERAL_2;

		public String getGENERAL_2() {
			return this.GENERAL_2;
		}

		public BigDecimal INVOICE_ID;

		public BigDecimal getINVOICE_ID() {
			return this.INVOICE_ID;
		}

		public java.util.Date EFFECTIVE_DATE;

		public java.util.Date getEFFECTIVE_DATE() {
			return this.EFFECTIVE_DATE;
		}

		public java.util.Date PAYMENT_DUE_DATE;

		public java.util.Date getPAYMENT_DUE_DATE() {
			return this.PAYMENT_DUE_DATE;
		}

		public BigDecimal INVOICE_AMOUNT;

		public BigDecimal getINVOICE_AMOUNT() {
			return this.INVOICE_AMOUNT;
		}

		public BigDecimal CURRENT_DUE;

		public BigDecimal getCURRENT_DUE() {
			return this.CURRENT_DUE;
		}

		public BigDecimal PAYMENT_METHOD_CODE;

		public BigDecimal getPAYMENT_METHOD_CODE() {
			return this.PAYMENT_METHOD_CODE;
		}

		public String GENERAL_21;

		public String getGENERAL_21() {
			return this.GENERAL_21;
		}

		public String ABBREVIATION;

		public String getABBREVIATION() {
			return this.ABBREVIATION;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.CUSTOMER_NODE_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_NAME = readString(dis);

					this.GENERAL_3 = readString(dis);

					this.GENERAL_2 = readString(dis);

					this.INVOICE_ID = (BigDecimal) dis.readObject();

					this.EFFECTIVE_DATE = readDate(dis);

					this.PAYMENT_DUE_DATE = readDate(dis);

					this.INVOICE_AMOUNT = (BigDecimal) dis.readObject();

					this.CURRENT_DUE = (BigDecimal) dis.readObject();

					this.PAYMENT_METHOD_CODE = (BigDecimal) dis.readObject();

					this.GENERAL_21 = readString(dis);

					this.ABBREVIATION = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.CUSTOMER_NODE_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_ID = (BigDecimal) dis.readObject();

					this.ACCOUNT_NAME = readString(dis);

					this.GENERAL_3 = readString(dis);

					this.GENERAL_2 = readString(dis);

					this.INVOICE_ID = (BigDecimal) dis.readObject();

					this.EFFECTIVE_DATE = readDate(dis);

					this.PAYMENT_DUE_DATE = readDate(dis);

					this.INVOICE_AMOUNT = (BigDecimal) dis.readObject();

					this.CURRENT_DUE = (BigDecimal) dis.readObject();

					this.PAYMENT_METHOD_CODE = (BigDecimal) dis.readObject();

					this.GENERAL_21 = readString(dis);

					this.ABBREVIATION = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				} catch (ClassNotFoundException eCNFE) {
					throw new RuntimeException(eCNFE);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// BigDecimal

				dos.writeObject(this.CUSTOMER_NODE_ID);

				// BigDecimal

				dos.writeObject(this.ACCOUNT_ID);

				// String

				writeString(this.ACCOUNT_NAME, dos);

				// String

				writeString(this.GENERAL_3, dos);

				// String

				writeString(this.GENERAL_2, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_ID);

				// java.util.Date

				writeDate(this.EFFECTIVE_DATE, dos);

				// java.util.Date

				writeDate(this.PAYMENT_DUE_DATE, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_AMOUNT);

				// BigDecimal

				dos.writeObject(this.CURRENT_DUE);

				// BigDecimal

				dos.writeObject(this.PAYMENT_METHOD_CODE);

				// String

				writeString(this.GENERAL_21, dos);

				// String

				writeString(this.ABBREVIATION, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// BigDecimal

				dos.writeObject(this.CUSTOMER_NODE_ID);

				// BigDecimal

				dos.writeObject(this.ACCOUNT_ID);

				// String

				writeString(this.ACCOUNT_NAME, dos);

				// String

				writeString(this.GENERAL_3, dos);

				// String

				writeString(this.GENERAL_2, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_ID);

				// java.util.Date

				writeDate(this.EFFECTIVE_DATE, dos);

				// java.util.Date

				writeDate(this.PAYMENT_DUE_DATE, dos);

				// BigDecimal

				dos.writeObject(this.INVOICE_AMOUNT);

				// BigDecimal

				dos.writeObject(this.CURRENT_DUE);

				// BigDecimal

				dos.writeObject(this.PAYMENT_METHOD_CODE);

				// String

				writeString(this.GENERAL_21, dos);

				// String

				writeString(this.ABBREVIATION, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("CUSTOMER_NODE_ID=" + String.valueOf(CUSTOMER_NODE_ID));
			sb.append(",ACCOUNT_ID=" + String.valueOf(ACCOUNT_ID));
			sb.append(",ACCOUNT_NAME=" + ACCOUNT_NAME);
			sb.append(",GENERAL_3=" + GENERAL_3);
			sb.append(",GENERAL_2=" + GENERAL_2);
			sb.append(",INVOICE_ID=" + String.valueOf(INVOICE_ID));
			sb.append(",EFFECTIVE_DATE=" + String.valueOf(EFFECTIVE_DATE));
			sb.append(",PAYMENT_DUE_DATE=" + String.valueOf(PAYMENT_DUE_DATE));
			sb.append(",INVOICE_AMOUNT=" + String.valueOf(INVOICE_AMOUNT));
			sb.append(",CURRENT_DUE=" + String.valueOf(CURRENT_DUE));
			sb.append(",PAYMENT_METHOD_CODE=" + String.valueOf(PAYMENT_METHOD_CODE));
			sb.append(",GENERAL_21=" + GENERAL_21);
			sb.append(",ABBREVIATION=" + ABBREVIATION);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tDBInput_1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;
		String currentVirtualComponent = null;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tSalesforceInput_1Process(globalMap);

				row1Struct row1 = new row1Struct();
				out_invoices_sfStruct out_invoices_sf = new out_invoices_sfStruct();

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk begin ] start
				 */

				ok_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", false);
				start_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", System.currentTimeMillis());

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "out_invoices_sf");
				}

				int tos_count_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = 0;

				boolean doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = 0 == 0;
				@SuppressWarnings("unchecked")
				java.util.Map<String, Object> restRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (java.util.Map<String, Object>) globalMap
						.get("restRequest");
				String currentTRestRequestOperation_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (String) (restRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
						? restRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.get("OPERATION")
						: null);

				org.talend.components.api.component.ComponentDefinition def_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = new org.talend.components.salesforce.tsalesforceoutputbulk.TSalesforceOutputBulkDefinition();

				org.talend.components.api.component.runtime.Writer writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				org.talend.components.api.component.runtime.Reader reader_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;

				org.talend.components.salesforce.tsalesforceoutputbulk.TSalesforceOutputBulkProperties props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.salesforce.tsalesforceoutputbulk.TSalesforceOutputBulkProperties) def_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.createRuntimeProperties();
				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setValue("ignoreNull", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setValue("outputAction",
						org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPSERT);

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setValue("bulkFilePath",
						"C:/Salesforce/output.csv");

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setValue("append", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.upsertRelationTable.setValue("columnName",
						"AccountName__c");

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.upsertRelationTable.setValue("polymorphic",
						false);

				class SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_1_fisrt {

					String getSchemaValue() {

						StringBuilder s = new StringBuilder();

						a("{\"type\":\"record\",", s);

						a("\"name\":\"out_invoices_sf\",\"fields\":[{", s);

						a("\"name\":\"AccountName__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AccountName__c\",\"talend.field.dbColumnName\":\"AccountName__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AccountName__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"InvoiceDate__c\",\"talend.field.dbColumnName\":\"InvoiceDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceID__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"InvoiceID__c\",\"talend.field.dbColumnName\":\"InvoiceID__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceID__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentDueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"PaymentDueDate__c\",\"talend.field.dbColumnName\":\"PaymentDueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentDueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Amount__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Amount__c\",\"talend.field.dbColumnName\":\"Amount__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Amount__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"CurrentDue__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CurrentDue__c\",\"talend.field.dbColumnName\":\"CurrentDue__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CurrentDue__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"DueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"DueDate__c\",\"talend.field.dbColumnName\":\"DueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"DueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"TVA__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"TVA__c\",\"talend.field.dbColumnName\":\"TVA__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"14\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"TVA__c\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"AmountTTC__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AmountTTC__c\",\"talend.field.dbColumnName\":\"AmountTTC__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AmountTTC__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"ClientNumber__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"ClientNumber__c\",\"talend.field.dbColumnName\":\"ClientNumber__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"15\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ClientNumber__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Source__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Source__c\",\"talend.field.dbColumnName\":\"Source__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Source__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Invoice_Number__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Invoice_Number__c\",\"talend.field.dbColumnName\":\"Invoice_Number__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Invoice_Number__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentOptions__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"PaymentOptions__c\",\"talend.field.dbColumnName\":\"PaymentOptions__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentOptions__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"out_invoices_sf\",\"di.table.label\":\"out_invoices_sf\"}",
								s);

						return s.toString();

					}

					void a(String part, StringBuilder strB) {
						strB.append(part);
					}

				}

				SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_1_fisrt sst_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_1_fisrt = new SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_1_fisrt();

				props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.schema.setValue("schema",
						new org.apache.avro.Schema.Parser()
								.parse(sst_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_1_fisrt.getSchemaValue()));

				globalMap.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_COMPONENT_RUNTIME_PROPERTIES",
						props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
				globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
				globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
				java.net.URL mappings_url_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = this.getClass()
						.getResource("/xmlMappings");
				globalMap.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk_MAPPINGS_URL",
						mappings_url_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);

				org.talend.components.api.container.RuntimeContainer container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = new org.talend.components.api.container.RuntimeContainer() {
					public Object getComponentData(String componentId, String key) {
						return globalMap.get(componentId + "_" + key);
					}

					public void setComponentData(String componentId, String key, Object data) {
						globalMap.put(componentId + "_" + key, data);
					}

					public String getCurrentComponentId() {
						return "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";
					}

					public Object getGlobalData(String key) {
						return globalMap.get(key);
					}
				};

				int nb_line_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = 0;

				org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				topology_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = org.talend.components.api.component.ConnectorTopology.INCOMING;

				org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = def_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.getRuntimeInfo(org.talend.components.api.component.runtime.ExecutionEngine.DI,
								props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk,
								topology_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
				java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = def_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.getSupportedConnectorTopologies();

				org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.api.component.runtime.RuntimableRuntime) (Class
						.forName(runtime_info_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getRuntimeClassName())
						.newInstance());
				org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.initialize(container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk,
								props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);

				if (initVr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
					throw new RuntimeException(initVr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getMessage());
				}

				if (componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
					org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.api.component.runtime.ComponentDriverInitialization) componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk;
					compDriverInitialization_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.runAtDriver(container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
				}

				org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				if (componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk instanceof org.talend.components.api.component.runtime.SourceOrSink) {
					sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.api.component.runtime.SourceOrSink) componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk;
					if (doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk) {
						org.talend.daikon.properties.ValidationResult vr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
								.validate(container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
						if (vr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
								.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
							throw new RuntimeException(
									vr_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getMessage());
						}
					}
				}

				org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				if (sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk instanceof org.talend.components.api.component.runtime.Sink) {
					org.talend.components.api.component.runtime.Sink sink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.api.component.runtime.Sink) sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk;
					org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = sink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.createWriteOperation();
					if (doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk) {
						writeOperation_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
								.initialize(container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
					}
					writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = writeOperation_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.createWriter(container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
					if (doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk) {
						writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
								.open("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk");
					}

					resourceMap.put("writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk",
							writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
				} // end of "sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
					// instanceof ...Sink"
				org.talend.components.api.component.Connector c_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.getAvailableConnectors(null, false)) {
					if (currentConnector.getName().equals("MAIN")) {
						c_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = currentConnector;
						break;
					}
				}
				org.apache.avro.Schema designSchema_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = props_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
						.getSchema(c_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk, false);
				incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(
						designSchema_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);

				java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = new java.util.ArrayList<Object>();
				java.util.Iterator outgoingMainRecordsIt_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk begin ] stop
				 */

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row1");
				}

				int tos_count_tMap_1 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) globalMap
						.get("tHash_Lookup_row2"));

				row2Struct row2HashKey = new row2Struct();
				row2Struct row2Default = new row2Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_1__Struct {
					BigDecimal montantHT;
					BigDecimal montantTVA;
					String invoiceId;
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
				out_invoices_sfStruct out_invoices_sf_tmp = new out_invoices_sfStruct();
// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tDBInput_1 begin ] start
				 */

				ok_Hash.put("tDBInput_1", false);
				start_Hash.put("tDBInput_1", System.currentTimeMillis());

				currentComponent = "tDBInput_1";

				int tos_count_tDBInput_1 = 0;

				int nb_line_tDBInput_1 = 0;
				java.sql.Connection conn_tDBInput_1 = null;
				String driverClass_tDBInput_1 = "oracle.jdbc.OracleDriver";
				java.lang.Class.forName(driverClass_tDBInput_1);

				String url_tDBInput_1 = null;
				url_tDBInput_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + "digimqsvstaging01"
						+ ")(port=" + "1521" + "))(connect_data=(service_name=" + "DGCSTDB" + ")))";

				String dbUser_tDBInput_1 = "sales";

				final String decryptedPassword_tDBInput_1 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:sg8PxhdKYK9VMAHKSaNJOSdwf+5pQZWmHvOUMHVb0D7EUw==");

				String dbPwd_tDBInput_1 = decryptedPassword_tDBInput_1;

				conn_tDBInput_1 = java.sql.DriverManager.getConnection(url_tDBInput_1, dbUser_tDBInput_1,
						dbPwd_tDBInput_1);
				java.sql.Statement stmtGetTZ_tDBInput_1 = conn_tDBInput_1.createStatement();
				java.sql.ResultSet rsGetTZ_tDBInput_1 = stmtGetTZ_tDBInput_1
						.executeQuery("select sessiontimezone from dual");
				String sessionTimezone_tDBInput_1 = java.util.TimeZone.getDefault().getID();
				while (rsGetTZ_tDBInput_1.next()) {
					sessionTimezone_tDBInput_1 = rsGetTZ_tDBInput_1.getString(1);
				}
				if (!(conn_tDBInput_1 instanceof oracle.jdbc.OracleConnection)
						&& conn_tDBInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class)) {
					if (conn_tDBInput_1.unwrap(oracle.jdbc.OracleConnection.class) != null) {
						((oracle.jdbc.OracleConnection) conn_tDBInput_1.unwrap(oracle.jdbc.OracleConnection.class))
								.setSessionTimeZone(sessionTimezone_tDBInput_1);
					}
				} else {
					((oracle.jdbc.OracleConnection) conn_tDBInput_1).setSessionTimeZone(sessionTimezone_tDBInput_1);
				}

				java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

				String dbquery_tDBInput_1 = "SELECT \ni.CUSTOMER_NODE_ID, \ni.ACCOUNT_ID, \na.ACCOUNT_NAME, \ni.GENERAL_3,\ni.GENERAL_2,\ni.INVOICE_ID, \ni.EFFECTIV"
						+ "E_DATE, \ni.PAYMENT_DUE_DATE, \ni.INVOICE_AMOUNT, \ni.CURRENT_DUE,\nc.PAYMENT_METHOD_CODE, \nc.GENERAL_2,\nr.ABBREVIATIO"
						+ "N\nFROM \"OPS$DGCPRD1B\".INVOICE i\nJOIN \"OPS$DGCPRD1B\".ACCOUNT a \nON i.ACCOUNT_ID = a.ACCOUNT_ID\nJOIN \"OPS$DGCPRD1"
						+ "B\".CUSTOMER_NODE_HISTORY c\nON i.CUSTOMER_NODE_ID = c.CUSTOMER_NODE_ID\nJOIN \"OPS$DGCPRD1B\".REFERENCE_CODE r\nON c.PA"
						+ "YMENT_METHOD_CODE = r.REFERENCE_CODE\nWHERE c.GENERAL_2 iS NOT NULL\nAND r.REFERENCE_TYPE_ID = '88001478'\nAND i.EFFECTI"
						+ "VE_DATE > (ADD_MONTHS(sysdate, -12)) \nAND ROWNUM <= 100";

				globalMap.put("tDBInput_1_QUERY", dbquery_tDBInput_1);
				java.sql.ResultSet rs_tDBInput_1 = null;

				try {
					rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
					java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
					int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

					String tmpContent_tDBInput_1 = null;

					while (rs_tDBInput_1.next()) {
						nb_line_tDBInput_1++;

						if (colQtyInRs_tDBInput_1 < 1) {
							row1.CUSTOMER_NODE_ID = null;
						} else {

							if (rs_tDBInput_1.getObject(1) != null) {
								row1.CUSTOMER_NODE_ID = rs_tDBInput_1.getBigDecimal(1);
							} else {

								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 2) {
							row1.ACCOUNT_ID = null;
						} else {

							if (rs_tDBInput_1.getObject(2) != null) {
								row1.ACCOUNT_ID = rs_tDBInput_1.getBigDecimal(2);
							} else {

								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 3) {
							row1.ACCOUNT_NAME = null;
						} else {

							row1.ACCOUNT_NAME = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
						}
						if (colQtyInRs_tDBInput_1 < 4) {
							row1.GENERAL_3 = null;
						} else {

							row1.GENERAL_3 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
						}
						if (colQtyInRs_tDBInput_1 < 5) {
							row1.GENERAL_2 = null;
						} else {

							row1.GENERAL_2 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
						}
						if (colQtyInRs_tDBInput_1 < 6) {
							row1.INVOICE_ID = null;
						} else {

							if (rs_tDBInput_1.getObject(6) != null) {
								row1.INVOICE_ID = rs_tDBInput_1.getBigDecimal(6);
							} else {

								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 7) {
							row1.EFFECTIVE_DATE = null;
						} else {

							row1.EFFECTIVE_DATE = routines.system.JDBCUtil.getDate(rs_tDBInput_1, 7);
						}
						if (colQtyInRs_tDBInput_1 < 8) {
							row1.PAYMENT_DUE_DATE = null;
						} else {

							row1.PAYMENT_DUE_DATE = routines.system.JDBCUtil.getDate(rs_tDBInput_1, 8);
						}
						if (colQtyInRs_tDBInput_1 < 9) {
							row1.INVOICE_AMOUNT = null;
						} else {

							if (rs_tDBInput_1.getObject(9) != null) {
								row1.INVOICE_AMOUNT = rs_tDBInput_1.getBigDecimal(9);
							} else {

								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 10) {
							row1.CURRENT_DUE = null;
						} else {

							if (rs_tDBInput_1.getObject(10) != null) {
								row1.CURRENT_DUE = rs_tDBInput_1.getBigDecimal(10);
							} else {

								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 11) {
							row1.PAYMENT_METHOD_CODE = null;
						} else {

							if (rs_tDBInput_1.getObject(11) != null) {
								row1.PAYMENT_METHOD_CODE = rs_tDBInput_1.getBigDecimal(11);
							} else {

								row1.PAYMENT_METHOD_CODE = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 12) {
							row1.GENERAL_21 = null;
						} else {

							row1.GENERAL_21 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 12, false);
						}
						if (colQtyInRs_tDBInput_1 < 13) {
							row1.ABBREVIATION = null;
						} else {

							row1.ABBREVIATION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 13, false);
						}

						/**
						 * [tDBInput_1 begin ] stop
						 */

						/**
						 * [tDBInput_1 main ] start
						 */

						currentComponent = "tDBInput_1";

						tos_count_tDBInput_1++;

						/**
						 * [tDBInput_1 main ] stop
						 */

						/**
						 * [tDBInput_1 process_data_begin ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_begin ] stop
						 */

						/**
						 * [tMap_1 main ] start
						 */

						currentComponent = "tMap_1";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row1"

							);
						}

						boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

						// ###############################
						// # Input tables (lookups)
						boolean rejectedInnerJoin_tMap_1 = false;
						boolean mainRowRejected_tMap_1 = false;

						///////////////////////////////////////////////
						// Starting Lookup Table "row2"
						///////////////////////////////////////////////

						boolean forceLooprow2 = false;

						row2Struct row2ObjectFromLookup = null;

						if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

							hasCasePrimitiveKeyWithNull_tMap_1 = false;

							row2HashKey.Registration_Number__c = row1.ABBREVIATION;

							row2HashKey.hashCodeDirty = true;

							tHash_Lookup_row2.lookup(row2HashKey);

						} // G_TM_M_020

						if (tHash_Lookup_row2 != null && tHash_Lookup_row2.getCount(row2HashKey) > 1) { // G 071

							// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row2'
							// and it contains more one result from keys : row2.Registration_Number__c = '"
							// + row2HashKey.Registration_Number__c + "'");
						} // G 071

						row2Struct row2 = null;

						row2Struct fromLookup_row2 = null;
						row2 = row2Default;

						if (tHash_Lookup_row2 != null && tHash_Lookup_row2.hasNext()) { // G 099

							fromLookup_row2 = tHash_Lookup_row2.next();

						} // G 099

						if (fromLookup_row2 != null) {
							row2 = fromLookup_row2;
						}

						// ###############################
						{ // start of Var scope

							// ###############################
							// # Vars tables

							Var__tMap_1__Struct Var = Var__tMap_1;
							Var.montantHT = row1.GENERAL_3 != null ? new BigDecimal(row1.GENERAL_3.replaceAll(",", ""))
									: new BigDecimal("0");
							Var.montantTVA = row1.GENERAL_2 != null ? new BigDecimal(row1.GENERAL_2.replaceAll(",", ""))
									: new BigDecimal("0");
							Var.invoiceId = row1.INVOICE_ID.toString();// ###############################
							// ###############################
							// # Output tables

							out_invoices_sf = null;

// # Output table : 'out_invoices_sf'
							out_invoices_sf_tmp.AccountName__c = row2.Id;
							out_invoices_sf_tmp.InvoiceDate__c = row1.EFFECTIVE_DATE;
							out_invoices_sf_tmp.InvoiceID__c = Var.invoiceId;
							out_invoices_sf_tmp.PaymentDueDate__c = row1.PAYMENT_DUE_DATE;
							out_invoices_sf_tmp.Amount__c = Var.montantHT;
							out_invoices_sf_tmp.CurrentDue__c = row1.CURRENT_DUE;
							out_invoices_sf_tmp.DueDate__c = row1.PAYMENT_DUE_DATE;
							out_invoices_sf_tmp.TVA__c = Var.montantTVA;
							out_invoices_sf_tmp.AmountTTC__c = row1.INVOICE_AMOUNT;
							out_invoices_sf_tmp.ClientNumber__c = row1.ACCOUNT_NAME;
							out_invoices_sf_tmp.Source__c = "SeV";
							out_invoices_sf_tmp.Invoice_Number__c = Var.invoiceId;
							out_invoices_sf_tmp.PaymentOptions__c = row1.ABBREVIATION;
							out_invoices_sf = out_invoices_sf_tmp;
// ###############################

						} // end of Var scope

						rejectedInnerJoin_tMap_1 = false;

						tos_count_tMap_1++;

						/**
						 * [tMap_1 main ] stop
						 */

						/**
						 * [tMap_1 process_data_begin ] start
						 */

						currentComponent = "tMap_1";

						/**
						 * [tMap_1 process_data_begin ] stop
						 */
// Start of branch "out_invoices_sf"
						if (out_invoices_sf != null) {

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk main ] start
							 */

							currentVirtualComponent = "tSalesforceOutputBulkExec_1";

							currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1

										, "out_invoices_sf"

								);
							}

							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.createNewRecord();
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("AccountName__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("AccountName__c",
										out_invoices_sf.AccountName__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("InvoiceDate__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("InvoiceDate__c",
										out_invoices_sf.InvoiceDate__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("InvoiceID__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("InvoiceID__c",
										out_invoices_sf.InvoiceID__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("PaymentDueDate__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.put("PaymentDueDate__c", out_invoices_sf.PaymentDueDate__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("Amount__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("Amount__c",
										out_invoices_sf.Amount__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("CurrentDue__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("CurrentDue__c",
										out_invoices_sf.CurrentDue__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("DueDate__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("DueDate__c",
										out_invoices_sf.DueDate__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("TVA__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("TVA__c",
										out_invoices_sf.TVA__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("AmountTTC__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("AmountTTC__c",
										out_invoices_sf.AmountTTC__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("ClientNumber__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.put("ClientNumber__c", out_invoices_sf.ClientNumber__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("Source__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.put("Source__c",
										out_invoices_sf.Source__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("Invoice_Number__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.put("Invoice_Number__c", out_invoices_sf.Invoice_Number__c);
							}
							// skip the put action if the input column doesn't appear in component runtime
							// schema
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
											.getRuntimeSchema().getField("PaymentOptions__c") != null) {
								incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.put("PaymentOptions__c", out_invoices_sf.PaymentOptions__c);
							}

							org.apache.avro.generic.IndexedRecord data_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
							if (incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null) {
								data_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = incomingEnforcer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.getCurrentRecord();
							}

							if (writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null
									&& data_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null) {
								writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.write(data_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
							}

							nb_line_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk++;

							tos_count_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk++;

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk main ] stop
							 */

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk process_data_begin ] start
							 */

							currentVirtualComponent = "tSalesforceOutputBulkExec_1";

							currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk process_data_begin ] stop
							 */

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk process_data_end ] start
							 */

							currentVirtualComponent = "tSalesforceOutputBulkExec_1";

							currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

							/**
							 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk process_data_end ] stop
							 */

						} // End of branch "out_invoices_sf"

						/**
						 * [tMap_1 process_data_end ] start
						 */

						currentComponent = "tMap_1";

						/**
						 * [tMap_1 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 process_data_end ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 end ] start
						 */

						currentComponent = "tDBInput_1";

					}
				} finally {
					if (rs_tDBInput_1 != null) {
						rs_tDBInput_1.close();
					}
					if (stmt_tDBInput_1 != null) {
						stmt_tDBInput_1.close();
					}
					if (conn_tDBInput_1 != null && !conn_tDBInput_1.isClosed()) {

						conn_tDBInput_1.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}

				}

				globalMap.put("tDBInput_1_NB_LINE", nb_line_tDBInput_1);

				ok_Hash.put("tDBInput_1", true);
				end_Hash.put("tDBInput_1", System.currentTimeMillis());

				/**
				 * [tDBInput_1 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row2 != null) {
					tHash_Lookup_row2.endGet();
				}
				globalMap.remove("tHash_Lookup_row2");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row1");
				}

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk end ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

// end of generic

				resourceMap.put("finish_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", Boolean.TRUE);

				java.util.Map<String, Object> resultMap_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = null;
				if (writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null) {
					org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = (org.talend.components.api.component.runtime.Result) writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.close();
					resultMap_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.getWriteOperation().finalize(
									java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(
											resultObject_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk),
									container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
				}
				if (resultMap_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk != null) {
					for (java.util.Map.Entry<String, Object> entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk : resultMap_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
							.entrySet()) {
						switch (entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getKey()) {
						case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE:
							container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setComponentData(
									"tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", "ERROR_MESSAGE",
									entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT:
							container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setComponentData(
									"tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", "NB_LINE",
									entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT:
							container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setComponentData(
									"tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", "NB_SUCCESS",
									entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT:
							container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setComponentData(
									"tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", "NB_REJECT",
									entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getValue());
							break;
						default:
							StringBuilder studio_key_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = new StringBuilder();
							for (int i_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = 0; i_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk < entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
									.getKey().length(); i_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk++) {
								char ch_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.getKey().charAt(i_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
								if (Character.isUpperCase(ch_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk)
										&& i_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk > 0) {
									studio_key_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.append('_');
								}
								studio_key_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk
										.append(ch_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
							}
							container_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.setComponentData(
									"tSalesforceOutputBulkExec_1_tSalesforceOutputBulk",
									studio_key_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.toString()
											.toUpperCase(java.util.Locale.ENGLISH),
									entry_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getValue());
							break;
						}
					}
				}

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "out_invoices_sf");
				}

				ok_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", true);
				end_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceOutputBulk", System.currentTimeMillis());

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk end ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec begin ] start
				 */

				ok_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec", false);
				start_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec", System.currentTimeMillis());

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

				int tos_count_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = 0;

				boolean doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = 0 == 0;
				@SuppressWarnings("unchecked")
				java.util.Map<String, Object> restRequest_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (java.util.Map<String, Object>) globalMap
						.get("restRequest");
				String currentTRestRequestOperation_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (String) (restRequest_tSalesforceOutputBulkExec_1_tSalesforceBulkExec != null
						? restRequest_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.get("OPERATION")
						: null);

				org.talend.components.api.component.ComponentDefinition def_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = new org.talend.components.salesforce.tsalesforcebulkexec.TSalesforceBulkExecDefinition();

				org.talend.components.api.component.runtime.Writer writer_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = null;
				org.talend.components.api.component.runtime.Reader reader_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = null;

				org.talend.components.salesforce.tsalesforcebulkexec.TSalesforceBulkExecProperties props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.components.salesforce.tsalesforcebulkexec.TSalesforceBulkExecProperties) def_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
						.createRuntimeProperties();
				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.setValue("bulkFilePath",
						"C:/Salesforce/output.csv");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.setValue("outputUpsertKey", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.setValue("contentType",
						org.talend.components.salesforce.tsalesforcebulkexec.TSalesforceBulkExecProperties.ContentType.CSV);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.setValue("outputAction",
						org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPSERT);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.setValue("upsertKeyColumn", "InvoiceID__c");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.bulkProperties.setValue("concurrencyMode",
						org.talend.components.salesforce.SalesforceBulkProperties.Concurrency.Parallel);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.bulkProperties.setValue("bytesToCommit",
						10485760);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.bulkProperties.setValue("rowsToCommit", 10000);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.bulkProperties.setValue("waitTimeCheckBatchState",
						10000);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.bulkProperties.setValue("safetySwitch", true);

				class SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_1_fisrt {

					String getSchemaValue() {

						StringBuilder s = new StringBuilder();

						a("{\"type\":\"record\",", s);

						a("\"name\":\"output\",\"fields\":[{", s);

						a("\"name\":\"AccountName__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AccountName__c\",\"talend.field.dbColumnName\":\"AccountName__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AccountName__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"InvoiceDate__c\",\"talend.field.dbColumnName\":\"InvoiceDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceID__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"InvoiceID__c\",\"talend.field.dbColumnName\":\"InvoiceID__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceID__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentDueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"PaymentDueDate__c\",\"talend.field.dbColumnName\":\"PaymentDueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentDueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Amount__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Amount__c\",\"talend.field.dbColumnName\":\"Amount__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Amount__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"CurrentDue__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CurrentDue__c\",\"talend.field.dbColumnName\":\"CurrentDue__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CurrentDue__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"DueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"DueDate__c\",\"talend.field.dbColumnName\":\"DueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"DueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"TVA__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"TVA__c\",\"talend.field.dbColumnName\":\"TVA__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"14\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"TVA__c\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"AmountTTC__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AmountTTC__c\",\"talend.field.dbColumnName\":\"AmountTTC__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AmountTTC__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"ClientNumber__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"ClientNumber__c\",\"talend.field.dbColumnName\":\"ClientNumber__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"15\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ClientNumber__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Source__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Source__c\",\"talend.field.dbColumnName\":\"Source__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Source__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Invoice_Number__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Invoice_Number__c\",\"talend.field.dbColumnName\":\"Invoice_Number__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Invoice_Number__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentOptions__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"PaymentOptions__c\",\"talend.field.dbColumnName\":\"PaymentOptions__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentOptions__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"salesforce_id\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",
								s);

						a("\"name\":\"salesforce_created\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"out_invoices_sf\",\"di.table.label\":\"out_invoices_sf\"}",
								s);

						return s.toString();

					}

					void a(String part, StringBuilder strB) {
						strB.append(part);
					}

				}

				SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_1_fisrt sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_1_fisrt = new SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_1_fisrt();

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.schemaFlow.setValue("schema",
						new org.apache.avro.Schema.Parser()
								.parse(sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_1_fisrt.getSchemaValue()));

				class SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_2_fisrt {

					String getSchemaValue() {

						StringBuilder s = new StringBuilder();

						a("{\"type\":\"record\",", s);

						a("\"name\":\"rejectOutput\",\"fields\":[{", s);

						a("\"name\":\"AccountName__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AccountName__c\",\"talend.field.dbColumnName\":\"AccountName__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AccountName__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"InvoiceDate__c\",\"talend.field.dbColumnName\":\"InvoiceDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceID__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"InvoiceID__c\",\"talend.field.dbColumnName\":\"InvoiceID__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceID__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentDueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"PaymentDueDate__c\",\"talend.field.dbColumnName\":\"PaymentDueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentDueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Amount__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Amount__c\",\"talend.field.dbColumnName\":\"Amount__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Amount__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"CurrentDue__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CurrentDue__c\",\"talend.field.dbColumnName\":\"CurrentDue__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CurrentDue__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"DueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"DueDate__c\",\"talend.field.dbColumnName\":\"DueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"DueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"TVA__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"TVA__c\",\"talend.field.dbColumnName\":\"TVA__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"14\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"TVA__c\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"AmountTTC__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AmountTTC__c\",\"talend.field.dbColumnName\":\"AmountTTC__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AmountTTC__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"ClientNumber__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"ClientNumber__c\",\"talend.field.dbColumnName\":\"ClientNumber__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"15\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ClientNumber__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Source__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Source__c\",\"talend.field.dbColumnName\":\"Source__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Source__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Invoice_Number__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Invoice_Number__c\",\"talend.field.dbColumnName\":\"Invoice_Number__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Invoice_Number__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentOptions__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"PaymentOptions__c\",\"talend.field.dbColumnName\":\"PaymentOptions__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentOptions__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"error\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"out_invoices_sf\",\"di.table.label\":\"out_invoices_sf\"}",
								s);

						return s.toString();

					}

					void a(String part, StringBuilder strB) {
						strB.append(part);
					}

				}

				SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_2_fisrt sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_2_fisrt = new SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_2_fisrt();

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.schemaReject.setValue("schema",
						new org.apache.avro.Schema.Parser()
								.parse(sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_2_fisrt.getSchemaValue()));

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("endpoint",
						"https://test.salesforce.com/services/Soap/u/52.0");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("loginType",
						org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.Basic);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("reuseSession", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("needCompression", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("timeout", 60000);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("httpChunked", true);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.setValue("clientId", "");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.userPassword.setValue("securityKey",
						routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:mOE1U4a0XSys2VKXnwzRtS1sBoi43sRNs5VB/+xGghFMY9UvZM/KMOuCuv0mC0fpCXf2uA=="));

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.userPassword.setValue("useAuth",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.userPassword.setValue("userId",
						"mbohui@reej-consulting.comfwireej");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.userPassword.setValue("password",
						routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:mYx+50geyjJsDbsKPFsp7Lvl24bov0ge/cDv27nF5rl94aBeIA=="));

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.sslProperties.setValue("mutualAuth",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.proxy.setValue("useProxy", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.proxy.userPassword.setValue("useAuth",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.referencedComponent
						.setValue("referenceDefinitionName", "tSalesforceConnection");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.setValue("moduleName", "Invoice__c");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("endpoint",
						"https://test.salesforce.com/services/Soap/u/52.0");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("loginType",
						org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.Basic);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("reuseSession", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("needCompression",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("timeout", 60000);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("httpChunked", true);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.setValue("clientId", "");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.userPassword
						.setValue("securityKey", routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:MMdHdZ7I7MAEFYcewtKO6n2U/HLyUVbeHcSHIxiJXqSypBpOjcemGBceQvLd90cm3KB4bQ=="));

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.userPassword.setValue("useAuth",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.userPassword.setValue("userId",
						"mbohui@reej-consulting.comfwireej");

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.userPassword
						.setValue("password", routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:ybanY+VikYTyf1Xiu05bwKsbDpRNhvNxjcGY9ZutMUbsGexxyg=="));

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.sslProperties
						.setValue("mutualAuth", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.proxy.setValue("useProxy",
						false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.proxy.userPassword
						.setValue("useAuth", false);

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.referencedComponent
						.setValue("referenceDefinitionName", "tSalesforceConnection");

				class SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_3_fisrt {

					String getSchemaValue() {

						StringBuilder s = new StringBuilder();

						a("{\"type\":\"record\",", s);

						a("\"name\":\"out_invoices_sf\",\"fields\":[{", s);

						a("\"name\":\"AccountName__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AccountName__c\",\"talend.field.dbColumnName\":\"AccountName__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AccountName__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"InvoiceDate__c\",\"talend.field.dbColumnName\":\"InvoiceDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"InvoiceID__c\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"InvoiceID__c\",\"talend.field.dbColumnName\":\"InvoiceID__c\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"InvoiceID__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentDueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"PaymentDueDate__c\",\"talend.field.dbColumnName\":\"PaymentDueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentDueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Amount__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Amount__c\",\"talend.field.dbColumnName\":\"Amount__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Amount__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"CurrentDue__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CurrentDue__c\",\"talend.field.dbColumnName\":\"CurrentDue__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CurrentDue__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"DueDate__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"DueDate__c\",\"talend.field.dbColumnName\":\"DueDate__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"DueDate__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"TVA__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"TVA__c\",\"talend.field.dbColumnName\":\"TVA__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"14\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"TVA__c\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"AmountTTC__c\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AmountTTC__c\",\"talend.field.dbColumnName\":\"AmountTTC__c\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AmountTTC__c\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"ClientNumber__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"ClientNumber__c\",\"talend.field.dbColumnName\":\"ClientNumber__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"15\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ClientNumber__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Source__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Source__c\",\"talend.field.dbColumnName\":\"Source__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Source__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Invoice_Number__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Invoice_Number__c\",\"talend.field.dbColumnName\":\"Invoice_Number__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Invoice_Number__c\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"PaymentOptions__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"PaymentOptions__c\",\"talend.field.dbColumnName\":\"PaymentOptions__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"PaymentOptions__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"out_invoices_sf\",\"di.table.label\":\"out_invoices_sf\"}",
								s);

						return s.toString();

					}

					void a(String part, StringBuilder strB) {
						strB.append(part);
					}

				}

				SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_3_fisrt sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_3_fisrt = new SchemaSettingTool_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_3_fisrt();

				props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.main.setValue("schema",
						new org.apache.avro.Schema.Parser()
								.parse(sst_tSalesforceOutputBulkExec_1_tSalesforceBulkExec_3_fisrt.getSchemaValue()));

				if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.referencedComponent.referenceType
						.getValue()) {
					final String referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.referencedComponent.componentInstanceId
							.getStringValue();
					if (referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec != null) {
						org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.daikon.properties.Properties) globalMap
								.get(referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
										+ "_COMPONENT_RUNTIME_PROPERTIES");
						props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.connection.referencedComponent
								.setReference(
										referencedComponentProperties_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
					}
				}
				if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.referencedComponent.referenceType
						.getValue()) {
					final String referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.referencedComponent.componentInstanceId
							.getStringValue();
					if (referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec != null) {
						org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.daikon.properties.Properties) globalMap
								.get(referencedComponentInstanceId_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
										+ "_COMPONENT_RUNTIME_PROPERTIES");
						props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.module.connection.referencedComponent
								.setReference(
										referencedComponentProperties_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
					}
				}
				globalMap.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec_COMPONENT_RUNTIME_PROPERTIES",
						props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
				globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
				globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
				java.net.URL mappings_url_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = this.getClass()
						.getResource("/xmlMappings");
				globalMap.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec_MAPPINGS_URL",
						mappings_url_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);

				org.talend.components.api.container.RuntimeContainer container_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = new org.talend.components.api.container.RuntimeContainer() {
					public Object getComponentData(String componentId, String key) {
						return globalMap.get(componentId + "_" + key);
					}

					public void setComponentData(String componentId, String key, Object data) {
						globalMap.put(componentId + "_" + key, data);
					}

					public String getCurrentComponentId() {
						return "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";
					}

					public Object getGlobalData(String key) {
						return globalMap.get(key);
					}
				};

				int nb_line_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = 0;

				org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = null;
				topology_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = org.talend.components.api.component.ConnectorTopology.NONE;

				org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = def_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
						.getRuntimeInfo(org.talend.components.api.component.runtime.ExecutionEngine.DI,
								props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec,
								topology_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
				java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = def_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
						.getSupportedConnectorTopologies();

				org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.components.api.component.runtime.RuntimableRuntime) (Class
						.forName(runtime_info_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.getRuntimeClassName())
						.newInstance());
				org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
						.initialize(container_tSalesforceOutputBulkExec_1_tSalesforceBulkExec,
								props_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);

				if (initVr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
						.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
					throw new RuntimeException(initVr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.getMessage());
				}

				if (componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
					org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.components.api.component.runtime.ComponentDriverInitialization) componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec;
					compDriverInitialization_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
							.runAtDriver(container_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
				}

				org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = null;
				if (componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec instanceof org.talend.components.api.component.runtime.SourceOrSink) {
					sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = (org.talend.components.api.component.runtime.SourceOrSink) componentRuntime_tSalesforceOutputBulkExec_1_tSalesforceBulkExec;
					if (doesNodeBelongToRequest_tSalesforceOutputBulkExec_1_tSalesforceBulkExec) {
						org.talend.daikon.properties.ValidationResult vr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = sourceOrSink_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
								.validate(container_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
						if (vr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec
								.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
							throw new RuntimeException(vr_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.getMessage());
						}
					}
				}

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec begin ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec main ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

				tos_count_tSalesforceOutputBulkExec_1_tSalesforceBulkExec++;

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec main ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec process_data_begin ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec process_data_begin ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec process_data_end ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec process_data_end ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec end ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

// end of generic

				resourceMap.put("finish_tSalesforceOutputBulkExec_1_tSalesforceBulkExec", Boolean.TRUE);

				ok_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec", true);
				end_Hash.put("tSalesforceOutputBulkExec_1_tSalesforceBulkExec", System.currentTimeMillis());

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			te.setVirtualComponentName(currentVirtualComponent);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_row2");

			try {

				/**
				 * [tDBInput_1 finally ] start
				 */

				currentComponent = "tDBInput_1";

				/**
				 * [tDBInput_1 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk finally ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceOutputBulk";

// finally of generic

				if (resourceMap.get("finish_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk") == null) {
					if (resourceMap.get("writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk") != null) {
						try {
							((org.talend.components.api.component.runtime.Writer) resourceMap
									.get("writer_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk")).close();
						} catch (java.io.IOException e_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk) {
							String errorMessage_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk = "failed to release the resource in tSalesforceOutputBulkExec_1_tSalesforceOutputBulk :"
									+ e_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk.getMessage();
							System.err.println(errorMessage_tSalesforceOutputBulkExec_1_tSalesforceOutputBulk);
						}
					}
				}

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceOutputBulk finally ] stop
				 */

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec finally ] start
				 */

				currentVirtualComponent = "tSalesforceOutputBulkExec_1";

				currentComponent = "tSalesforceOutputBulkExec_1_tSalesforceBulkExec";

// finally of generic

				if (resourceMap.get("finish_tSalesforceOutputBulkExec_1_tSalesforceBulkExec") == null) {
					if (resourceMap.get("reader_tSalesforceOutputBulkExec_1_tSalesforceBulkExec") != null) {
						try {
							((org.talend.components.api.component.runtime.Reader) resourceMap
									.get("reader_tSalesforceOutputBulkExec_1_tSalesforceBulkExec")).close();
						} catch (java.io.IOException e_tSalesforceOutputBulkExec_1_tSalesforceBulkExec) {
							String errorMessage_tSalesforceOutputBulkExec_1_tSalesforceBulkExec = "failed to release the resource in tSalesforceOutputBulkExec_1_tSalesforceBulkExec :"
									+ e_tSalesforceOutputBulkExec_1_tSalesforceBulkExec.getMessage();
							System.err.println(errorMessage_tSalesforceOutputBulkExec_1_tSalesforceBulkExec);
						}
					}
				}

				/**
				 * [tSalesforceOutputBulkExec_1_tSalesforceBulkExec finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}

	public static class row2Struct implements routines.system.IPersistableComparableLookupRow<row2Struct> {
		final static byte[] commonByteArrayLock_SEV_PROJ_imp_invoices = new byte[0];
		static byte[] commonByteArray_SEV_PROJ_imp_invoices = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public String Id;

		public String getId() {
			return this.Id;
		}

		public String Registration_Number__c;

		public String getRegistration_Number__c() {
			return this.Registration_Number__c;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result
						+ ((this.Registration_Number__c == null) ? 0 : this.Registration_Number__c.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row2Struct other = (row2Struct) obj;

			if (this.Registration_Number__c == null) {
				if (other.Registration_Number__c != null)
					return false;

			} else if (!this.Registration_Number__c.equals(other.Registration_Number__c))

				return false;

			return true;
		}

		public void copyDataTo(row2Struct other) {

			other.Id = this.Id;
			other.Registration_Number__c = this.Registration_Number__c;

		}

		public void copyKeysDataTo(row2Struct other) {

			other.Registration_Number__c = this.Registration_Number__c;

		}

		private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				dis.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				unmarshaller.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_SEV_PROJ_imp_invoices.length) {
					if (length < 1024 && commonByteArray_SEV_PROJ_imp_invoices.length == 0) {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[1024];
					} else {
						commonByteArray_SEV_PROJ_imp_invoices = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_SEV_PROJ_imp_invoices, 0, length);
				strReturn = new String(commonByteArray_SEV_PROJ_imp_invoices, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.Registration_Number__c = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_SEV_PROJ_imp_invoices) {

				try {

					int length = 0;

					this.Registration_Number__c = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Registration_Number__c, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Registration_Number__c, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Id = readString(dis, ois);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Id = readString(dis, objectIn);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				writeString(this.Id, dos, oos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				writeString(this.Id, dos, objectOut);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Id=" + Id);
			sb.append(",Registration_Number__c=" + Registration_Number__c);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row2Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Registration_Number__c, other.Registration_Number__c);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tSalesforceInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row2Struct row2 = new row2Struct();

				/**
				 * [tAdvancedHash_row2 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row2", false);
				start_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row2");
				}

				int tos_count_tAdvancedHash_row2 = 0;

				// connection name:row2
				// source node:tSalesforceInput_1 - inputs:(after_tDBInput_1)
				// outputs:(row2,row2) | target node:tAdvancedHash_row2 - inputs:(row2)
				// outputs:()
				// linked node: tMap_1 - inputs:(row1,row2) outputs:(out_invoices_sf)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row2 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row2Struct>getLookup(matchingModeEnum_row2);

				globalMap.put("tHash_Lookup_row2", tHash_Lookup_row2);

				/**
				 * [tAdvancedHash_row2 begin ] stop
				 */

				/**
				 * [tSalesforceInput_1 begin ] start
				 */

				ok_Hash.put("tSalesforceInput_1", false);
				start_Hash.put("tSalesforceInput_1", System.currentTimeMillis());

				currentComponent = "tSalesforceInput_1";

				int tos_count_tSalesforceInput_1 = 0;

				boolean doesNodeBelongToRequest_tSalesforceInput_1 = 0 == 0;
				@SuppressWarnings("unchecked")
				java.util.Map<String, Object> restRequest_tSalesforceInput_1 = (java.util.Map<String, Object>) globalMap
						.get("restRequest");
				String currentTRestRequestOperation_tSalesforceInput_1 = (String) (restRequest_tSalesforceInput_1 != null
						? restRequest_tSalesforceInput_1.get("OPERATION")
						: null);

				org.talend.components.api.component.ComponentDefinition def_tSalesforceInput_1 = new org.talend.components.salesforce.tsalesforceinput.TSalesforceInputDefinition();

				org.talend.components.api.component.runtime.Writer writer_tSalesforceInput_1 = null;
				org.talend.components.api.component.runtime.Reader reader_tSalesforceInput_1 = null;

				org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties props_tSalesforceInput_1 = (org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties) def_tSalesforceInput_1
						.createRuntimeProperties();
				props_tSalesforceInput_1.setValue("queryMode",
						org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties.QueryMode.Query);

				props_tSalesforceInput_1.setValue("manualQuery", true);

				props_tSalesforceInput_1.setValue("query",
						"SELECT Id, Registration_Number__c FROM Account WHERE Registration_Number__c != null");

				props_tSalesforceInput_1.setValue("includeDeleted", false);

				props_tSalesforceInput_1.setValue("batchSize", 250);

				props_tSalesforceInput_1.setValue("normalizeDelimiter", ";");

				props_tSalesforceInput_1.setValue("columnNameDelimiter", "_");

				props_tSalesforceInput_1.setValue("dataTimeUTC", true);

				props_tSalesforceInput_1.connection.setValue("endpoint", "https://test.salesforce.com/services/oauth2");

				props_tSalesforceInput_1.connection.setValue("loginType",
						org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.OAuth);

				props_tSalesforceInput_1.connection.setValue("needCompression", false);

				props_tSalesforceInput_1.connection.setValue("timeout", 60000);

				props_tSalesforceInput_1.connection.setValue("httpChunked", true);

				props_tSalesforceInput_1.connection.setValue("clientId", "");

				props_tSalesforceInput_1.connection.setValue("oauth2FlowType",
						org.talend.components.common.oauth.OAuth2FlowType.JWT_Flow);

				props_tSalesforceInput_1.connection.setValue("apiVersion", "52.0");

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("issuer",
						"3MVG9ayzKZt5EleHrLNqwLFLHK0Q2VEb3J1lAQ9lphQndEQ33fSbHr1vydtjkjJBg4ma0mtIgrrXSgUP6xssn");

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("subject",
						"mbohui@reej-consulting.comfwireej");

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("expirationTime", 600);

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("keyStore",
						"C:/Users/clepillouer/Desktop/00D530000004cLF.jks");

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("keyStorePassword",
						routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:QX9hDjVTAuNbfBlDno2OmBP8v8rss/+73DrFVlQqwL2jdgOG"));

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("certificateAlias", "Talend_certificat");

				props_tSalesforceInput_1.connection.oauth2JwtFlow.setValue("audience", "https://test.salesforce.com");

				props_tSalesforceInput_1.connection.userPassword.setValue("useAuth", false);

				props_tSalesforceInput_1.connection.proxy.setValue("useProxy", false);

				props_tSalesforceInput_1.connection.proxy.userPassword.setValue("useAuth", false);

				props_tSalesforceInput_1.connection.referencedComponent.setValue("referenceDefinitionName",
						"tSalesforceConnection");

				props_tSalesforceInput_1.module.setValue("moduleName", "Account");

				props_tSalesforceInput_1.module.connection.setValue("endpoint",
						"https://test.salesforce.com/services/oauth2");

				props_tSalesforceInput_1.module.connection.setValue("loginType",
						org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.OAuth);

				props_tSalesforceInput_1.module.connection.setValue("needCompression", false);

				props_tSalesforceInput_1.module.connection.setValue("timeout", 60000);

				props_tSalesforceInput_1.module.connection.setValue("httpChunked", true);

				props_tSalesforceInput_1.module.connection.setValue("clientId", "");

				props_tSalesforceInput_1.module.connection.setValue("oauth2FlowType",
						org.talend.components.common.oauth.OAuth2FlowType.JWT_Flow);

				props_tSalesforceInput_1.module.connection.setValue("apiVersion", "52.0");

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("issuer",
						"3MVG9ayzKZt5EleHrLNqwLFLHK0Q2VEb3J1lAQ9lphQndEQ33fSbHr1vydtjkjJBg4ma0mtIgrrXSgUP6xssn");

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("subject",
						"mbohui@reej-consulting.comfwireej");

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("expirationTime", 600);

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("keyStore",
						"C:/Users/clepillouer/Desktop/00D530000004cLF.jks");

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("keyStorePassword",
						routines.system.PasswordEncryptUtil.decryptPassword(
								"enc:routine.encryption.key.v1:J3LN2Ytw6eFUdgCWzCwJr17xuy+W2cLvyQWTmrKHnmeJ/6n4"));

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("certificateAlias",
						"Talend_certificat");

				props_tSalesforceInput_1.module.connection.oauth2JwtFlow.setValue("audience",
						"https://test.salesforce.com");

				props_tSalesforceInput_1.module.connection.userPassword.setValue("useAuth", false);

				props_tSalesforceInput_1.module.connection.proxy.setValue("useProxy", false);

				props_tSalesforceInput_1.module.connection.proxy.userPassword.setValue("useAuth", false);

				props_tSalesforceInput_1.module.connection.referencedComponent.setValue("referenceDefinitionName",
						"tSalesforceConnection");

				class SchemaSettingTool_tSalesforceInput_1_1_fisrt {

					String getSchemaValue() {

						StringBuilder s = new StringBuilder();

						a("{\"type\":\"record\",", s);

						a("\"name\":\"MAIN\",\"fields\":[{", s);

						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",
								s);

						a("\"name\":\"Registration_Number__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Registration_Number__c\",\"talend.field.dbColumnName\":\"Registration_Number__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"80\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Registration_Number__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"MAIN\",\"di.table.label\":\"MAIN\"}",
								s);

						return s.toString();

					}

					void a(String part, StringBuilder strB) {
						strB.append(part);
					}

				}

				SchemaSettingTool_tSalesforceInput_1_1_fisrt sst_tSalesforceInput_1_1_fisrt = new SchemaSettingTool_tSalesforceInput_1_1_fisrt();

				props_tSalesforceInput_1.module.main.setValue("schema",
						new org.apache.avro.Schema.Parser().parse(sst_tSalesforceInput_1_1_fisrt.getSchemaValue()));

				if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_1.connection.referencedComponent.referenceType
						.getValue()) {
					final String referencedComponentInstanceId_tSalesforceInput_1 = props_tSalesforceInput_1.connection.referencedComponent.componentInstanceId
							.getStringValue();
					if (referencedComponentInstanceId_tSalesforceInput_1 != null) {
						org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_1 = (org.talend.daikon.properties.Properties) globalMap
								.get(referencedComponentInstanceId_tSalesforceInput_1
										+ "_COMPONENT_RUNTIME_PROPERTIES");
						props_tSalesforceInput_1.connection.referencedComponent
								.setReference(referencedComponentProperties_tSalesforceInput_1);
					}
				}
				if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_1.module.connection.referencedComponent.referenceType
						.getValue()) {
					final String referencedComponentInstanceId_tSalesforceInput_1 = props_tSalesforceInput_1.module.connection.referencedComponent.componentInstanceId
							.getStringValue();
					if (referencedComponentInstanceId_tSalesforceInput_1 != null) {
						org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_1 = (org.talend.daikon.properties.Properties) globalMap
								.get(referencedComponentInstanceId_tSalesforceInput_1
										+ "_COMPONENT_RUNTIME_PROPERTIES");
						props_tSalesforceInput_1.module.connection.referencedComponent
								.setReference(referencedComponentProperties_tSalesforceInput_1);
					}
				}
				globalMap.put("tSalesforceInput_1_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceInput_1);
				globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
				globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
				java.net.URL mappings_url_tSalesforceInput_1 = this.getClass().getResource("/xmlMappings");
				globalMap.put("tSalesforceInput_1_MAPPINGS_URL", mappings_url_tSalesforceInput_1);

				org.talend.components.api.container.RuntimeContainer container_tSalesforceInput_1 = new org.talend.components.api.container.RuntimeContainer() {
					public Object getComponentData(String componentId, String key) {
						return globalMap.get(componentId + "_" + key);
					}

					public void setComponentData(String componentId, String key, Object data) {
						globalMap.put(componentId + "_" + key, data);
					}

					public String getCurrentComponentId() {
						return "tSalesforceInput_1";
					}

					public Object getGlobalData(String key) {
						return globalMap.get(key);
					}
				};

				int nb_line_tSalesforceInput_1 = 0;

				org.talend.components.api.component.ConnectorTopology topology_tSalesforceInput_1 = null;
				topology_tSalesforceInput_1 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

				org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceInput_1 = def_tSalesforceInput_1
						.getRuntimeInfo(org.talend.components.api.component.runtime.ExecutionEngine.DI,
								props_tSalesforceInput_1, topology_tSalesforceInput_1);
				java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceInput_1 = def_tSalesforceInput_1
						.getSupportedConnectorTopologies();

				org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceInput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime) (Class
						.forName(runtime_info_tSalesforceInput_1.getRuntimeClassName()).newInstance());
				org.talend.daikon.properties.ValidationResult initVr_tSalesforceInput_1 = componentRuntime_tSalesforceInput_1
						.initialize(container_tSalesforceInput_1, props_tSalesforceInput_1);

				if (initVr_tSalesforceInput_1
						.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
					throw new RuntimeException(initVr_tSalesforceInput_1.getMessage());
				}

				if (componentRuntime_tSalesforceInput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
					org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceInput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization) componentRuntime_tSalesforceInput_1;
					compDriverInitialization_tSalesforceInput_1.runAtDriver(container_tSalesforceInput_1);
				}

				org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceInput_1 = null;
				if (componentRuntime_tSalesforceInput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
					sourceOrSink_tSalesforceInput_1 = (org.talend.components.api.component.runtime.SourceOrSink) componentRuntime_tSalesforceInput_1;
					if (doesNodeBelongToRequest_tSalesforceInput_1) {
						org.talend.daikon.properties.ValidationResult vr_tSalesforceInput_1 = sourceOrSink_tSalesforceInput_1
								.validate(container_tSalesforceInput_1);
						if (vr_tSalesforceInput_1
								.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR) {
							throw new RuntimeException(vr_tSalesforceInput_1.getMessage());
						}
					}
				}

				if (sourceOrSink_tSalesforceInput_1 instanceof org.talend.components.api.component.runtime.Source) {
					org.talend.components.api.component.runtime.Source source_tSalesforceInput_1 = (org.talend.components.api.component.runtime.Source) sourceOrSink_tSalesforceInput_1;
					reader_tSalesforceInput_1 = source_tSalesforceInput_1.createReader(container_tSalesforceInput_1);
					reader_tSalesforceInput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(
							reader_tSalesforceInput_1, container_tSalesforceInput_1);

					boolean multi_output_is_allowed_tSalesforceInput_1 = false;
					org.talend.components.api.component.Connector c_tSalesforceInput_1 = null;
					for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceInput_1
							.getAvailableConnectors(null, true)) {
						if (currentConnector.getName().equals("MAIN")) {
							c_tSalesforceInput_1 = currentConnector;
						}

						if (currentConnector.getName().equals("REJECT")) {// it's better to move the code to javajet
							multi_output_is_allowed_tSalesforceInput_1 = true;
						}
					}
					org.apache.avro.Schema schema_tSalesforceInput_1 = props_tSalesforceInput_1
							.getSchema(c_tSalesforceInput_1, true);

					org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceInput_1 = org.talend.codegen.enforcer.EnforcerCreator
							.createOutgoingEnforcer(schema_tSalesforceInput_1, false);

					// Create a reusable factory that converts the output of the reader to an
					// IndexedRecord.
					org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceInput_1 = null;

					// Iterate through the incoming data.
					boolean available_tSalesforceInput_1 = reader_tSalesforceInput_1.start();

					resourceMap.put("reader_tSalesforceInput_1", reader_tSalesforceInput_1);

					for (; available_tSalesforceInput_1; available_tSalesforceInput_1 = reader_tSalesforceInput_1
							.advance()) {
						nb_line_tSalesforceInput_1++;

						if (multi_output_is_allowed_tSalesforceInput_1) {

							row2 = null;

						}

						try {
							Object data_tSalesforceInput_1 = reader_tSalesforceInput_1.getCurrent();

							if (multi_output_is_allowed_tSalesforceInput_1) {
								row2 = new row2Struct();
							}

							// Construct the factory once when the first data arrives.
							if (factory_tSalesforceInput_1 == null) {
								factory_tSalesforceInput_1 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>) new org.talend.daikon.avro.AvroRegistry()
										.createIndexedRecordConverter(data_tSalesforceInput_1.getClass());
							}

							// Enforce the outgoing schema on the input.
							outgoingEnforcer_tSalesforceInput_1
									.setWrapped(factory_tSalesforceInput_1.convertToAvro(data_tSalesforceInput_1));
							Object columnValue_0_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(0);
							row2.Id = (String) (columnValue_0_tSalesforceInput_1);
							Object columnValue_1_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(1);
							row2.Registration_Number__c = (String) (columnValue_1_tSalesforceInput_1);
						} catch (org.talend.components.api.exception.DataRejectException e_tSalesforceInput_1) {
							java.util.Map<String, Object> info_tSalesforceInput_1 = e_tSalesforceInput_1
									.getRejectInfo();

							// TODO use a method instead of getting method by the special key
							// "error/errorMessage"
							Object errorMessage_tSalesforceInput_1 = null;
							if (info_tSalesforceInput_1.containsKey("error")) {
								errorMessage_tSalesforceInput_1 = info_tSalesforceInput_1.get("error");
							} else if (info_tSalesforceInput_1.containsKey("errorMessage")) {
								errorMessage_tSalesforceInput_1 = info_tSalesforceInput_1.get("errorMessage");
							} else {
								errorMessage_tSalesforceInput_1 = "Rejected but error message missing";
							}
							errorMessage_tSalesforceInput_1 = "Row " + nb_line_tSalesforceInput_1 + ": "
									+ errorMessage_tSalesforceInput_1;
							System.err.println(errorMessage_tSalesforceInput_1);

							// If the record is reject, the main line record should put NULL
							row2 = null;

						} // end of catch

						java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceInput_1 = new java.util.ArrayList<Object>();
						java.util.Iterator outgoingMainRecordsIt_tSalesforceInput_1 = null;

						/**
						 * [tSalesforceInput_1 begin ] stop
						 */

						/**
						 * [tSalesforceInput_1 main ] start
						 */

						currentComponent = "tSalesforceInput_1";

						tos_count_tSalesforceInput_1++;

						/**
						 * [tSalesforceInput_1 main ] stop
						 */

						/**
						 * [tSalesforceInput_1 process_data_begin ] start
						 */

						currentComponent = "tSalesforceInput_1";

						/**
						 * [tSalesforceInput_1 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row2 main ] start
						 */

						currentComponent = "tAdvancedHash_row2";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row2"

							);
						}

						row2Struct row2_HashRow = new row2Struct();

						row2_HashRow.Id = row2.Id;

						row2_HashRow.Registration_Number__c = row2.Registration_Number__c;

						tHash_Lookup_row2.put(row2_HashRow);

						tos_count_tAdvancedHash_row2++;

						/**
						 * [tAdvancedHash_row2 main ] stop
						 */

						/**
						 * [tAdvancedHash_row2 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row2";

						/**
						 * [tAdvancedHash_row2 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row2 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row2";

						/**
						 * [tAdvancedHash_row2 process_data_end ] stop
						 */

						/**
						 * [tSalesforceInput_1 process_data_end ] start
						 */

						currentComponent = "tSalesforceInput_1";

						/**
						 * [tSalesforceInput_1 process_data_end ] stop
						 */

						/**
						 * [tSalesforceInput_1 end ] start
						 */

						currentComponent = "tSalesforceInput_1";

// end of generic

						resourceMap.put("finish_tSalesforceInput_1", Boolean.TRUE);

					} // while
				} // end of "if (sourceOrSink_tSalesforceInput_1 instanceof ...Source)"
				java.util.Map<String, Object> resultMap_tSalesforceInput_1 = null;
				if (reader_tSalesforceInput_1 != null) {
					reader_tSalesforceInput_1.close();
					resultMap_tSalesforceInput_1 = reader_tSalesforceInput_1.getReturnValues();
				}
				if (resultMap_tSalesforceInput_1 != null) {
					for (java.util.Map.Entry<String, Object> entry_tSalesforceInput_1 : resultMap_tSalesforceInput_1
							.entrySet()) {
						switch (entry_tSalesforceInput_1.getKey()) {
						case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE:
							container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "ERROR_MESSAGE",
									entry_tSalesforceInput_1.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT:
							container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_LINE",
									entry_tSalesforceInput_1.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT:
							container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_SUCCESS",
									entry_tSalesforceInput_1.getValue());
							break;
						case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT:
							container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_REJECT",
									entry_tSalesforceInput_1.getValue());
							break;
						default:
							StringBuilder studio_key_tSalesforceInput_1 = new StringBuilder();
							for (int i_tSalesforceInput_1 = 0; i_tSalesforceInput_1 < entry_tSalesforceInput_1.getKey()
									.length(); i_tSalesforceInput_1++) {
								char ch_tSalesforceInput_1 = entry_tSalesforceInput_1.getKey()
										.charAt(i_tSalesforceInput_1);
								if (Character.isUpperCase(ch_tSalesforceInput_1) && i_tSalesforceInput_1 > 0) {
									studio_key_tSalesforceInput_1.append('_');
								}
								studio_key_tSalesforceInput_1.append(ch_tSalesforceInput_1);
							}
							container_tSalesforceInput_1.setComponentData("tSalesforceInput_1",
									studio_key_tSalesforceInput_1.toString().toUpperCase(java.util.Locale.ENGLISH),
									entry_tSalesforceInput_1.getValue());
							break;
						}
					}
				}

				ok_Hash.put("tSalesforceInput_1", true);
				end_Hash.put("tSalesforceInput_1", System.currentTimeMillis());

				/**
				 * [tSalesforceInput_1 end ] stop
				 */

				/**
				 * [tAdvancedHash_row2 end ] start
				 */

				currentComponent = "tAdvancedHash_row2";

				tHash_Lookup_row2.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row2");
				}

				ok_Hash.put("tAdvancedHash_row2", true);
				end_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row2 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tSalesforceInput_1 finally ] start
				 */

				currentComponent = "tSalesforceInput_1";

// finally of generic

				if (resourceMap.get("finish_tSalesforceInput_1") == null) {
					if (resourceMap.get("reader_tSalesforceInput_1") != null) {
						try {
							((org.talend.components.api.component.runtime.Reader) resourceMap
									.get("reader_tSalesforceInput_1")).close();
						} catch (java.io.IOException e_tSalesforceInput_1) {
							String errorMessage_tSalesforceInput_1 = "failed to release the resource in tSalesforceInput_1 :"
									+ e_tSalesforceInput_1.getMessage();
							System.err.println(errorMessage_tSalesforceInput_1);
						}
					}
				}

				/**
				 * [tSalesforceInput_1 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row2 finally ] start
				 */

				currentComponent = "tAdvancedHash_row2";

				/**
				 * [tAdvancedHash_row2 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	protected PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
		public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password,
				String dbConnectionName) throws ClassNotFoundException, java.sql.SQLException {
			return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
		}

		public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
				throws ClassNotFoundException, java.sql.SQLException {
			return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
		}
	};

	private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";

	{
		globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
	}

	public static void main(String[] args) {
		final imp_invoices imp_invoicesClass = new imp_invoices();

		int exitCode = imp_invoicesClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}
		enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket can't open
				System.err.println("The statistics socket port " + portStats + " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}
		boolean inOSGi = routines.system.BundleUtils.inOSGi();

		if (inOSGi) {
			java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

			if (jobProperties != null && jobProperties.get("context") != null) {
				contextStr = (String) jobProperties.get("context");
			}
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = imp_invoices.class.getClassLoader()
					.getResourceAsStream("sev_proj/imp_invoices_0_2/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = imp_invoices.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				try {
					// defaultProps is in order to keep the original context value
					if (context != null && context.isEmpty()) {
						defaultProps.load(inContext);
						context = new ContextProperties(defaultProps);
					}
				} finally {
					inContext.close();
				}
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tSetProxy_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tSetProxy_1) {
			globalMap.put("tSetProxy_1_SUBPROCESS_STATE", -1);

			e_tSetProxy_1.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out
					.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : imp_invoices");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;

		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {// for trunjob call
			final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 201984 characters generated by Talend Open Studio for Data Integration on the
 * September 15, 2022 at 8:10:37 AM BOT
 ************************************************************************************************/